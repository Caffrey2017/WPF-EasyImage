<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="NormalBtnStyle" TargetType="Button">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--按钮样式-->
                    <Border x:Name="Back" BorderThickness="0" CornerRadius="0" BorderBrush="#5555">
                        <!--按钮背景色-->
                        <Border.Background>
                            <SolidColorBrush Color="#FF71A3F9"></SolidColorBrush>
                        </Border.Background>
                        <!--按钮内容-->
                        <Label x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="White" Padding="0"></Label>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Back" Property="Border.Background" Value="#FF6A96E4"></Setter>
                        </Trigger>
                        <!--按钮失效-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Foreground" Value="#FFA4A4A4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseBtnStyle" TargetType="Button">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--按钮样式-->
                    <Border x:Name="Back" BorderThickness="0" CornerRadius="0" BorderBrush="#5555">
                        <!--按钮背景色-->
                        <Border.Background>
                            <SolidColorBrush Color="#FFD14444"></SolidColorBrush>
                        </Border.Background>
                        <!--按钮内容-->
                        <Label x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="White" Padding="0"></Label>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Back" Property="Border.Background" Value="Red"></Setter>
                            <Setter TargetName="Content" Property="Label.FontWeight" Value="Bold"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingBtnStyle" TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--按钮样式-->
                    <Border x:Name="ButtonBorder" BorderThickness="0" CornerRadius="0">
                        <!--按钮背景色-->
                        <Border.Background>
                            <ImageBrush ImageSource="../Images/icon_setting.png"></ImageBrush>
                        </Border.Background>
                        <Border x:Name="InnerBorder" Background="Transparent"></Border>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Gray" Opacity="0.2"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="5,0,0,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="buttonBorder" Width="25" Height="25"  BorderThickness="0" Margin="0" Background="{TemplateBinding Background}">
                        <Border x:Name="innerBorder" BorderThickness="0" Background="Transparent"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter  TargetName="buttonBorder" Property="BorderThickness" Value="1" />
                            <Setter  TargetName="buttonBorder" Property="BorderBrush" Value="White" />
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter  TargetName="innerBorder" Property="BorderThickness" Value="1" />
                            <Setter  TargetName="innerBorder" Property="BorderBrush" Value="White" />
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="False">
                            <Setter  TargetName="innerBorder" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter  TargetName="innerBorder" Property="Background" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter  TargetName="innerBorder" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Gray" Opacity="0.7"></SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>